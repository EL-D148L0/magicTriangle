class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Triangl_Skeleton:Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"Corner_1",				"",
			"Corner_2",				"",
			"Corner_3",				""
		};
	};

};

class CfgModels
{
	class Default
	{
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "";
	};

	class Triangl: Default // class name must be the same as name of p3d
	{
		skeletonName = "Triangl_Skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
			"camo"
		};
		sectionsInherit = "";		
		class Animations
		{
			class Corner_1_UD //ud for up down
			{
				type			= translationY;
				source			= Corner_1_UD_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_1_LR //lr for left right
			{
				type			= translationX;
				source			= Corner_1_LR_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_1_FB //FB for forward backwards
			{
				type			= translationZ;
				source			= Corner_1_FB_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_2_UD //ud for up down
			{
				type			= translationY;
				source			= Corner_2_UD_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_2; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_2_LR //lr for left right
			{
				type			= translationX;
				source			= Corner_2_LR_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_2; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_2_FB //FB for forward backwards
			{
				type			= translationZ;
				source			= Corner_2_FB_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_2; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_3_UD //ud for up down
			{
				type			= translationY;
				source			= Corner_3_UD_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_3; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_3_LR //lr for left right
			{
				type			= translationX;
				source			= Corner_3_LR_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_3; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_3_FB //FB for forward backwards
			{
				type			= translationZ;
				source			= Corner_3_FB_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_3; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -12; // Value of the controller at which the rotation will be angle0
				maxValue		= 12; // Value of the controller at which the rotation will be angle1
				offset0			= -12;
				offset1			= 12;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};

		};
	};
	
};